services:
  # --- 1. Local PostgreSQL Database ---
  postgres-db:
    image: postgres:14-alpine
    container_name: postgres-db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # --- 2. Auth Service (Python) ---
  auth-service:
    build: ./services/auth-service
    container_name: auth-service
    env_file: ./.env
    environment: # <-- Provide DB_HOST for local environment
      - DB_HOST=postgres-db
    depends_on:
      postgres-db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 20s

  # --- 3. Project Service (Python) ---
  project-service:
    build: ./services/project-service
    container_name: project-service
    env_file: ./.env
    environment: # <-- Provide DB_HOST for local environment
      - DB_HOST=postgres-db
    depends_on:
      postgres-db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 20s

  # --- 4. AI Core Service (Python) ---
  ai-core-service:
    build: ./services/ai-core-service
    container_name: ai-core-service
    env_file: ./.env
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 20s

  # --- 5. Analysis Service (Python) ---
  analysis-service:
    build: ./services/analysis-service
    container_name: analysis-service
    env_file: ./.env
    depends_on:
      ai-core-service:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 20s

  # --- 6. Frontend Service (Node.js + React) ---
  frontend-service:
    build: ./services/frontend-dashboard-service
    container_name: frontend-service
    env_file: ./.env
    ports:
      - "3000:5000" # Expose on http://localhost:3000
    depends_on:
      auth-service:
        condition: service_healthy
      project-service:
        condition: service_healthy
      analysis-service:
        condition: service_healthy
      ai-core-service:
        condition: service_healthy

volumes:
  postgres_data: