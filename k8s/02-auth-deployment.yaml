# --- Authentication Service Deployment (Simplified) ---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-deployment
  labels:
    app: auth-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: auth-service
  template:
    metadata:
      labels:
        app: auth-service
    spec:
      # NOTE: No more serviceAccountName, no sidecar, no volumes
      containers:
      - name: auth-service
        image: PLACEHOLDER_REGION-docker.pkg.dev/PLACEHOLDER_PROJECT_ID/aiforge-services/auth-service:PLACEHOLDER_TAG
        ports:
        - containerPort: 8000
        env:
        # Load DB Credentials from the secret
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: DB_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: DB_PASSWORD
        - name: POSTGRES_DB
          value: "aiforge-main-db"
          
        # --- CRITICAL FIX ---
        # Set DB_HOST for the wait.sh script and database.py
        - name: DB_HOST
          value: "postgres-gke-service" # This must match 00-postgres-service.yaml
        # --- END CRITICAL FIX ---
        
        - name: JWT_SECRET_KEY
          value: "my-super-secret-random-key-for-jwt-32-chars-longer-is-better" # Make sure this is a strong, random string
        - name: ALGORITHM
          value: "HS256"
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 15
          periodSeconds: 20
          timeoutSeconds: 5
---
# --- Authentication Service ClusterIP (Internal DNS Name: "auth-service") ---
apiVersion: v1
kind: Service
metadata:
  name: auth-service
spec:
  selector:
    app: auth-service
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8000
  type: ClusterIP